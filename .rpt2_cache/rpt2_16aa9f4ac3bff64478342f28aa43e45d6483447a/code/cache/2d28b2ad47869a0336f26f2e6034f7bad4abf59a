{
  "code": "import * as Manager from \"../Manager/Manager\";\r\nimport * as Config from \"../Config/Config\";\r\nexport class RoleManager {\r\n    constructor() { }\r\n    static get hasPlayer() {\r\n        if (this.Player) {\r\n            return true;\r\n        }\r\n        else {\r\n            console.error('Create role first!');\r\n            return false;\r\n        }\r\n    }\r\n    static CreateRole(head, headUrl, bodySlot, bodyPath, callback, thisArg) {\r\n        if (!bodyPath || !head)\r\n            return;\r\n        this.Player = new Manager.PlayerRole(head, bodySlot);\r\n        this.changeHead(headUrl);\r\n        this.changeBody(bodyPath, callback, thisArg);\r\n    }\r\n    static changeHead(url) {\r\n        if (!this.hasPlayer)\r\n            return;\r\n        this.Player.setHead(url);\r\n    }\r\n    static changeBody(path, callback, thisArg, ...data) {\r\n        if (!this.hasPlayer)\r\n            return;\r\n        if (!path)\r\n            return;\r\n        Manager.PoolManager.recover(Config.PoolItemKey.DressTemplate, this.Player.mFactory);\r\n        this.Player.setBody(path, callback, thisArg, ...data);\r\n    }\r\n    static setState(aniName, role) {\r\n        switch (aniName) {\r\n            case this.ANIMATOR_IDLE:\r\n                role.State = Manager.StateBase.IDEL;\r\n                break;\r\n            case this.ANIMATOR_DEAD:\r\n                role.State = Manager.StateBase.DEAD;\r\n                break;\r\n        }\r\n    }\r\n}\r\nRoleManager.PLAYER = 'Player';\r\nRoleManager.ENEMY = 'Enemy';\r\nRoleManager.ANIMATORS_MOVE = ['walk', 'run'];\r\nRoleManager.ANIMATORS_ATTACK = ['attack1', 'attack2'];\r\nRoleManager.ANIMATORS_PLAYER_SKILL = 'skill';\r\nRoleManager.ANIMATOR_DEAD = 'death';\r\nRoleManager.ANIMATOR_WIN = 'win';\r\nRoleManager.ANIMATOR_IDLE = 'FightIdle';\r\nRoleManager.ANIMATOR_PROVOC_ENEMY = 'appear';\r\n",
  "references": [
    "E:/Practise/demo3DLaya/GrabX/src/Manager/Manager.ts",
    "E:/Practise/demo3DLaya/GrabX/src/Config/Config.ts",
    "E:/Practise/demo3DLaya/GrabX/src/Common/Common.ts"
  ]
}
