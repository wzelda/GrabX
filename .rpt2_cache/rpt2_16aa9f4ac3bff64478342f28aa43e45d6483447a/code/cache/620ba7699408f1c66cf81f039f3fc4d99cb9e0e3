{
  "code": "import * as Manager from \"./Manager\";\r\nimport * as Config from \"../Config/Config\";\r\nimport * as Common from \"../Common/Common\";\r\nexport class SpawnManager {\r\n    constructor() { }\r\n    static Load3dModel(path, completeCallback, thisArg) {\r\n        if (!Manager.SceneManager.CurScene || !path)\r\n            return;\r\n        Laya.Sprite3D.load(path, Laya.Handler.create(this, () => {\r\n            if (typeof completeCallback == 'function') {\r\n                let sp = Common.Resource.getRes(path);\r\n                if (!sp)\r\n                    return;\r\n                let msp = Manager.SceneManager.CurScene.addChild(sp);\r\n                let ani = msp.getComponent(Laya.Animator);\r\n                let aniState;\r\n                if (ani) {\r\n                    aniState = ani.getCurrentAnimatorPlayState(0);\r\n                }\r\n                let modelData = new Config.ModelDataStruct(msp, ani, aniState);\r\n                completeCallback.call(thisArg, modelData);\r\n            }\r\n        }));\r\n    }\r\n    static Load3dMesh(path, completeCallback, thisArg) {\r\n        if (!path)\r\n            return;\r\n        Common.Resource.load(path, thisArg, completeCallback, null, Laya.Loader.MESH);\r\n    }\r\n    static LoadMaterial(path, completeCallback, thisArg) {\r\n        if (!path)\r\n            return;\r\n        Common.Resource.load(path, thisArg, completeCallback, null, Laya.Loader.MATERIAL);\r\n    }\r\n    static CreateObjectFromPool(_path, _slot) {\r\n        if (!_path || !_slot)\r\n            return;\r\n        let obj = Laya.Pool.getItem(_path);\r\n        if (!obj)\r\n            return;\r\n        if (!obj['$PoolGID']) {\r\n            obj['$PoolGID'] = Laya.Utils.getGID();\r\n        }\r\n        if (!obj['$Path']) {\r\n            obj['$Path'] = _path;\r\n        }\r\n        this.poolObjs[obj['$PoolGID']] = obj;\r\n        _slot.displayObject.addChild(obj);\r\n        return obj;\r\n    }\r\n    static LoadView(pkg, com) {\r\n        if (!pkg || !com)\r\n            return;\r\n        Common.Resource.addUiPackage(pkg);\r\n        let grootInst = fgui.GRoot.inst;\r\n        let ui = fgui.UIPackage.createObject(pkg, com).asCom;\r\n        if (ui) {\r\n            grootInst.addChild(ui);\r\n            ui.visible = false;\r\n            ui.setSize(grootInst.width, grootInst.height);\r\n            ui.setXY(0, 0);\r\n        }\r\n        else {\r\n            console.error(\"Fail to add ui package: \", pkg, com);\r\n        }\r\n        return ui;\r\n    }\r\n}\r\n",
  "references": [
    "E:/Practise/demo3DLaya/GrabX/src/UI/Core.ts",
    "E:/Practise/demo3DLaya/GrabX/src/Manager/Manager.ts",
    "E:/Practise/demo3DLaya/GrabX/src/UI/UI.ts",
    "E:/Practise/demo3DLaya/GrabX/src/Common/Utils.ts",
    "E:/Practise/demo3DLaya/GrabX/src/Config/LocalConfig.ts",
    "E:/Practise/demo3DLaya/GrabX/src/Config/Config.ts",
    "E:/Practise/demo3DLaya/GrabX/src/Common/Common.ts",
    "E:/Practise/demo3DLaya/GrabX/src/Common/GEvent.ts"
  ]
}
